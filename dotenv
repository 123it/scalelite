# The hostname that the application API endpoint is accessible from. Used to protect against DNS rebinding attacks.
# URL_HOST=localhost

# A secret used internally by Rails. Should be unique per deployment. Generate with `bundle exec rake secret` or `openssl rand -hex 64`.
# SECRET_KEY_BASE=secret

# The shared secret that applications will use when calling BigBlueButton APIs on the load balancer. Generate with `openssl rand -hex 32`
# LOADBALANCER_SECRET=shared_secret

# URL for connecting to the PostgreSQL database, see the [Rails documentation](https://guides.rubyonrails.org/configuring.html#configuring-a-database).
# The URL should be in the form of `postgresql://username:password@connection_url`.
# Note that instead of using this environment variable, you can configure the database server in `config/database.yml`.
# DATABASE_URL=postgres://postgres:password@localhost:5432/scalelite_production?pool=5

# URL for connecting to the Redis server, see the [Redis gem documentation](https://rubydoc.info/github/redis/redis-rb/master/Redis#initialize-instance_method).
# The URL should be in the form of `redis://username:password@connection_url`.
# Note that instead of using this environment variable, you can configure the redis server in `config/redis_store.yml` (see below).
# REDIS_URL=redis://localhost:6379

# Set this variable to enable the "nginx" image to listen on SSL.
# If you enable this, then you must bind mount the files `/etc/nginx/ssl/live/$URL_HOST/fullchain.pem` and `/etc/nginx/ssl/live/$URL_HOST/privkey.pem`
# (containing the certificate plus intermediates and the private key respectively) into the Docker image.
# Alternately, you can mount the entire `/etc/letsencrypt` directory from certbot to `/etc/nginx/ssl` instead.
# NGINX_SSL=true

# Used by the "poller" image to set the interval at which BigBlueButton servers are polled, in seconds. Defaults to 60.
# POLL_INTERVAL=60

# Whether or not to poll the recording spool directory for new recordings. Defaults to "true".
# If the recording poll directory is on a local filesystem where inotify works, you can set this to "false" to reduce CPU overhead.
# RECORDING_IMPORT_POLL=true

# How often to check the recording spool directory for new recordings, in seconds (when running in poll mode). Defaults to 60.
# RECORDING_IMPORT_POLL_INTERVAL=60

# Specifics for deployments
# SCALELITE_REPO=blindsidenetwks
# SCALELITE_TAG=v1
# SCALELITE_RECORDING_DIR=/mnt/scalelite-recordings/var/bigbluebutton
# SCALELITE_NGINX_EXTRA_OPTS=--mount type=bind,source=/etc/letsencrypt,target=/etc/nginx/ssl,readonly

# ALLOWED_HOSTS=host1,host2 or .hosts.com, if not defined URL_HOST will be used
